
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000000 <vector_table>:
 8000000:	20000800 	andcs	r0, r0, r0, lsl #16
 8000004:	08000171 	stmdaeq	r0, {r0, r4, r5, r6, r8}
 8000008:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800000c:	08000241 	stmdaeq	r0, {r0, r6, r9}
 8000010:	0800024d 	stmdaeq	r0, {r0, r2, r3, r6, r9}
 8000014:	0800022d 	stmdaeq	r0, {r0, r2, r3, r5, r9}
 8000018:	08000141 	stmdaeq	r0, {r0, r6, r8}
	...
 800002c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000030:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800003c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000040:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000044:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000048:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800004c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000050:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000054:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000058:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800005c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000060:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000064:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000068:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800006c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000070:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000074:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000078:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800007c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000080:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000084:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000088:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800008c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000090:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000094:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000098:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800009c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000a0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000a4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000a8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000ac:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000b0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000b4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000b8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000bc:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000c0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000c4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000c8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000cc:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000d0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000d4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000d8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000dc:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000e0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000e4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000e8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000ec:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000f0:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000f4:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000f8:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 80000fc:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000100:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000104:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000108:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800010c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000110:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000114:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000118:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800011c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000120:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000124:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 8000128:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}
 800012c:	08000235 	stmdaeq	r0, {r0, r2, r4, r5, r9}

08000130 <sub>:
	//a=5;
	sum();
	while(1);
}
int sub()
{
 8000130:	b480      	push	{r7}
 8000132:	af00      	add	r7, sp, #0
return 2-1;
 8000134:	f04f 0301 	mov.w	r3, #1
}
 8000138:	4618      	mov	r0, r3
 800013a:	46bd      	mov	sp, r7
 800013c:	bc80      	pop	{r7}
 800013e:	4770      	bx	lr

08000140 <usage_fault_handler>:
void usage_fault_handler(){
 8000140:	b480      	push	{r7}
 8000142:	b083      	sub	sp, #12
 8000144:	af00      	add	r7, sp, #0
	volatile uint32_t *CCR;	
	extern int a;
	a=25;
 8000146:	f240 0304 	movw	r3, #4
 800014a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800014e:	f04f 0219 	mov.w	r2, #25
 8000152:	601a      	str	r2, [r3, #0]
	//asm volatile("MOVS r0, 0xe000e2da");
	//asm volatile("MOVS [r0], #0");	
	CCR=(uint32_t *)0xe000ed14;
 8000154:	f64e 5314 	movw	r3, #60692	; 0xed14
 8000158:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800015c:	607b      	str	r3, [r7, #4]
	*CCR=0x0;	
 800015e:	687b      	ldr	r3, [r7, #4]
 8000160:	f04f 0200 	mov.w	r2, #0
 8000164:	601a      	str	r2, [r3, #0]

	//printf("HI");
	// volatile ("POP {lr}");
	//asm volatile ("MOVS pc,lr");
return;
}
 8000166:	f107 070c 	add.w	r7, r7, #12
 800016a:	46bd      	mov	sp, r7
 800016c:	bc80      	pop	{r7}
 800016e:	4770      	bx	lr

08000170 <reset_handler>:
	dma2_channel3_isr,
	dma2_channel4_5_isr,
};
	int i,a;
void reset_handler(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b084      	sub	sp, #16
 8000174:	af00      	add	r7, sp, #0
	volatile unsigned *src, *dest;
	volatile uint32_t *CCR,*SHCSR;
	i=1;
 8000176:	f240 0300 	movw	r3, #0
 800017a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800017e:	f04f 0201 	mov.w	r2, #1
 8000182:	601a      	str	r2, [r3, #0]
	while(i);
 8000184:	bf00      	nop
 8000186:	f240 0300 	movw	r3, #0
 800018a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	2b00      	cmp	r3, #0
 8000192:	d1f8      	bne.n	8000186 <reset_handler+0x16>
	CCR=(uint32_t *)0xE000ED14;
 8000194:	f64e 5314 	movw	r3, #60692	; 0xed14
 8000198:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800019c:	607b      	str	r3, [r7, #4]
	*CCR=16;
 800019e:	687b      	ldr	r3, [r7, #4]
 80001a0:	f04f 0210 	mov.w	r2, #16
 80001a4:	601a      	str	r2, [r3, #0]
	SHCSR=(uint32_t *)0xE000ED24;
 80001a6:	f64e 5324 	movw	r3, #60708	; 0xed24
 80001aa:	f2ce 0300 	movt	r3, #57344	; 0xe000
 80001ae:	603b      	str	r3, [r7, #0]
	*SHCSR=0x70000;
 80001b0:	683b      	ldr	r3, [r7, #0]
 80001b2:	f44f 22e0 	mov.w	r2, #458752	; 0x70000
 80001b6:	601a      	str	r2, [r3, #0]
	
	asm("MSR msp, %0" : : "r"(&_stack));
 80001b8:	f640 0300 	movw	r3, #2048	; 0x800
 80001bc:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001c0:	f383 8808 	msr	MSP, r3

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
 80001c4:	f240 2358 	movw	r3, #600	; 0x258
 80001c8:	f6c0 0300 	movt	r3, #2048	; 0x800
 80001cc:	60fb      	str	r3, [r7, #12]
 80001ce:	f240 0300 	movw	r3, #0
 80001d2:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001d6:	60bb      	str	r3, [r7, #8]
 80001d8:	e00b      	b.n	80001f2 <reset_handler+0x82>
		*dest = *src;
 80001da:	68fb      	ldr	r3, [r7, #12]
 80001dc:	681a      	ldr	r2, [r3, #0]
 80001de:	68bb      	ldr	r3, [r7, #8]
 80001e0:	601a      	str	r2, [r3, #0]
	SHCSR=(uint32_t *)0xE000ED24;
	*SHCSR=0x70000;
	
	asm("MSR msp, %0" : : "r"(&_stack));

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	f103 0304 	add.w	r3, r3, #4
 80001e8:	60fb      	str	r3, [r7, #12]
 80001ea:	68bb      	ldr	r3, [r7, #8]
 80001ec:	f103 0304 	add.w	r3, r3, #4
 80001f0:	60bb      	str	r3, [r7, #8]
 80001f2:	68ba      	ldr	r2, [r7, #8]
 80001f4:	f240 0300 	movw	r3, #0
 80001f8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001fc:	429a      	cmp	r2, r3
 80001fe:	d3ec      	bcc.n	80001da <reset_handler+0x6a>
		*dest = *src;

	while (dest < &_ebss)
 8000200:	e007      	b.n	8000212 <reset_handler+0xa2>
		*dest++ = 0;
 8000202:	68bb      	ldr	r3, [r7, #8]
 8000204:	f04f 0200 	mov.w	r2, #0
 8000208:	601a      	str	r2, [r3, #0]
 800020a:	68bb      	ldr	r3, [r7, #8]
 800020c:	f103 0304 	add.w	r3, r3, #4
 8000210:	60bb      	str	r3, [r7, #8]
	asm("MSR msp, %0" : : "r"(&_stack));

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
		*dest = *src;

	while (dest < &_ebss)
 8000212:	68ba      	ldr	r2, [r7, #8]
 8000214:	f240 0308 	movw	r3, #8
 8000218:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800021c:	429a      	cmp	r2, r3
 800021e:	d3f0      	bcc.n	8000202 <reset_handler+0x92>
		*dest++ = 0;
	
	/* Call the application's entry point. */
	main();
 8000220:	f000 f822 	bl	8000268 <main>
}
 8000224:	f107 0710 	add.w	r7, r7, #16
 8000228:	46bd      	mov	sp, r7
 800022a:	bd80      	pop	{r7, pc}

0800022c <blocking_handler>:

void blocking_handler(void)
{
 800022c:	b480      	push	{r7}
 800022e:	af00      	add	r7, sp, #0
	while (1) ;
 8000230:	e7fe      	b.n	8000230 <blocking_handler+0x4>
 8000232:	bf00      	nop

08000234 <null_handler>:
}
void null_handler(void)
{
 8000234:	b480      	push	{r7}
 8000236:	af00      	add	r7, sp, #0
	/* Do nothing. */
}
 8000238:	46bd      	mov	sp, r7
 800023a:	bc80      	pop	{r7}
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop

08000240 <hard_fault_handler>:

void hard_fault_handler(void)
{
 8000240:	b480      	push	{r7}
 8000242:	af00      	add	r7, sp, #0
	//while(1);
	return;	
	/* Do nothing. */
}
 8000244:	46bd      	mov	sp, r7
 8000246:	bc80      	pop	{r7}
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop

0800024c <mem_manage_handler>:

void mem_manage_handler(void)
{
 800024c:	b480      	push	{r7}
 800024e:	af00      	add	r7, sp, #0
	/* Do nothing. */
}
 8000250:	46bd      	mov	sp, r7
 8000252:	bc80      	pop	{r7}
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop

Disassembly of section sumfunstart:

08000258 <sum>:
#include<stdint.h>
__attribute__((section("sumfunstart")))
//sumfunstart=.;
int sum()
{
 8000258:	b480      	push	{r7}
 800025a:	af00      	add	r7, sp, #0
return 2+1;
 800025c:	f04f 0303 	mov.w	r3, #3
}
 8000260:	4618      	mov	r0, r3
 8000262:	46bd      	mov	sp, r7
 8000264:	bc80      	pop	{r7}
 8000266:	4770      	bx	lr

Disassembly of section sumfunend:

08000268 <main>:
//sumfunend=.;
__attribute__((section("sumfunend")))

int main(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	b084      	sub	sp, #16
 800026c:	af00      	add	r7, sp, #0
	int (*fp)(void);
	//asm volatile ("MOVS r0, #1"); 
	//asm volatile ("MSR PRIMASK, r0");
		extern int a;
	//_set_BASEPRI(0x0);
	codeaddr=(unsigned *)0x2000009a;
 800026e:	f04f 039a 	mov.w	r3, #154	; 0x9a
 8000272:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8000276:	607b      	str	r3, [r7, #4]
		for(dest=codeaddr,src=&sumfunstart;src<=&sumfunend;src++,dest++){
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	60bb      	str	r3, [r7, #8]
 800027c:	f240 2358 	movw	r3, #600	; 0x258
 8000280:	f6c0 0300 	movt	r3, #2048	; 0x800
 8000284:	60fb      	str	r3, [r7, #12]
 8000286:	e00b      	b.n	80002a0 <main+0x38>
			*dest=*src;
 8000288:	68fb      	ldr	r3, [r7, #12]
 800028a:	681a      	ldr	r2, [r3, #0]
 800028c:	68bb      	ldr	r3, [r7, #8]
 800028e:	601a      	str	r2, [r3, #0]
	//asm volatile ("MOVS r0, #1"); 
	//asm volatile ("MSR PRIMASK, r0");
		extern int a;
	//_set_BASEPRI(0x0);
	codeaddr=(unsigned *)0x2000009a;
		for(dest=codeaddr,src=&sumfunstart;src<=&sumfunend;src++,dest++){
 8000290:	68fb      	ldr	r3, [r7, #12]
 8000292:	f103 0304 	add.w	r3, r3, #4
 8000296:	60fb      	str	r3, [r7, #12]
 8000298:	68bb      	ldr	r3, [r7, #8]
 800029a:	f103 0304 	add.w	r3, r3, #4
 800029e:	60bb      	str	r3, [r7, #8]
 80002a0:	68fa      	ldr	r2, [r7, #12]
 80002a2:	f240 2368 	movw	r3, #616	; 0x268
 80002a6:	f6c0 0300 	movt	r3, #2048	; 0x800
 80002aa:	429a      	cmp	r2, r3
 80002ac:	d9ec      	bls.n	8000288 <main+0x20>
			*dest=*src;
		}	
        a=8;
 80002ae:	f240 0304 	movw	r3, #4
 80002b2:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80002b6:	f04f 0208 	mov.w	r2, #8
 80002ba:	601a      	str	r2, [r3, #0]
	a=a/(a-8);
 80002bc:	f240 0304 	movw	r3, #4
 80002c0:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	f240 0304 	movw	r3, #4
 80002ca:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	f1a3 0308 	sub.w	r3, r3, #8
 80002d4:	fb92 f2f3 	sdiv	r2, r2, r3
 80002d8:	f240 0304 	movw	r3, #4
 80002dc:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80002e0:	601a      	str	r2, [r3, #0]
//	fp=codeaddr;
//	goto *codeaddr;
//	fp();	
	//a=5;
	sum();
 80002e2:	f7ff ffb9 	bl	8000258 <_etext>
	while(1);
 80002e6:	e7fe      	b.n	80002e6 <main+0x7e>

Disassembly of section .bss:

20000000 <i>:
20000000:	00000000 	andeq	r0, r0, r0

20000004 <a>:
20000004:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000197 	muleq	r0, r7, r1
   4:	00000002 	andeq	r0, r0, r2
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000004d 	andeq	r0, r0, sp, asr #32
  10:	0000a001 	andeq	sl, r0, r1
	...
  28:	06010200 	streq	r0, [r1], -r0, lsl #4
  2c:	0000002e 	andeq	r0, r0, lr, lsr #32
  30:	2c080102 	stfcss	f0, [r8], {2}
  34:	02000000 	andeq	r0, r0, #0
  38:	00b10502 	adcseq	r0, r1, r2, lsl #10
  3c:	02020000 	andeq	r0, r2, #0
  40:	00003a07 	andeq	r3, r0, r7, lsl #20
  44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
  48:	00000097 	muleq	r0, r7, r0
  4c:	0000bb03 	andeq	fp, r0, r3, lsl #22
  50:	57500200 	ldrbpl	r0, [r0, -r0, lsl #4]
  54:	02000000 	andeq	r0, r0, #0
  58:	00770704 	rsbseq	r0, r7, r4, lsl #14
  5c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
  60:	00009205 	andeq	r9, r0, r5, lsl #4
  64:	07080200 	streq	r0, [r8, -r0, lsl #4]
  68:	00000072 	andeq	r0, r0, r2, ror r0
  6c:	69050404 	stmdbvs	r5, {r2, sl}
  70:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
  74:	007c0704 	rsbseq	r0, ip, r4, lsl #14
  78:	01050000 	mrseq	r0, (UNDEF: 5)
  7c:	006d7573 	rsbeq	r7, sp, r3, ror r5
  80:	006c0401 	rsbeq	r0, ip, r1, lsl #8
  84:	02580000 	subseq	r0, r8, #0
  88:	02680800 	rsbeq	r0, r8, #0, 16
  8c:	00000800 	andeq	r0, r0, r0, lsl #16
  90:	01060000 	mrseq	r0, (UNDEF: 6)
  94:	00000059 	andeq	r0, r0, r9, asr r0
  98:	6c010b01 	stcvs	11, cr0, [r1], {1}
  9c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
  a0:	e8080002 	stmda	r8, {r1}
  a4:	2c080002 	stccs	0, cr0, [r8], {2}
  a8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  ac:	07000001 	streq	r0, [r0, -r1]
  b0:	000000c4 	andeq	r0, r0, r4, asr #1
  b4:	00730d01 	rsbseq	r0, r3, r1, lsl #26
  b8:	01010000 	mrseq	r0, (UNDEF: 1)
  bc:	0000a707 	andeq	sl, r0, r7, lsl #14
  c0:	730d0100 	movwvc	r0, #53504	; 0xd100
  c4:	01000000 	mrseq	r0, (UNDEF: 0)
  c8:	00890801 	addeq	r0, r9, r1, lsl #16
  cc:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
  d0:	00000109 	andeq	r0, r0, r9, lsl #2
  d4:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
  d8:	00637273 	rsbeq	r7, r3, r3, ror r2
  dc:	01090e01 	tsteq	r9, r1, lsl #28
  e0:	91020000 	mrsls	r0, (UNDEF: 2)
  e4:	00270874 	eoreq	r0, r7, r4, ror r8
  e8:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
  ec:	00000109 	andeq	r0, r0, r9, lsl #2
  f0:	0a709102 	beq	1c24500 <vector_table-0x63dbb00>
  f4:	01007066 	tsteq	r0, r6, rrx
  f8:	00011a0f 	andeq	r1, r1, pc, lsl #20
  fc:	00610b00 	rsbeq	r0, r1, r0, lsl #22
 100:	006c1201 	rsbeq	r1, ip, r1, lsl #4
 104:	01010000 	mrseq	r0, (UNDEF: 1)
 108:	0f040c00 	svceq	0x00040c00
 10c:	0d000001 	stceq	0, cr0, [r0, #-4]
 110:	00000073 	andeq	r0, r0, r3, ror r0
 114:	006c010e 	rsbeq	r0, ip, lr, lsl #2
 118:	040c0000 	streq	r0, [ip], #-0
 11c:	00000114 	andeq	r0, r0, r4, lsl r1
 120:	75730105 	ldrbvc	r0, [r3, #-261]!	; 0xfffffefb
 124:	21010062 	tstcs	r1, r2, rrx
 128:	0000006c 	andeq	r0, r0, ip, rrx
 12c:	08000130 	stmdaeq	r0, {r4, r5, r8}
 130:	08000140 	stmdaeq	r0, {r6, r8}
 134:	00000064 	andeq	r0, r0, r4, rrx
 138:	005e010f 	subseq	r0, lr, pc, lsl #2
 13c:	25010000 	strcs	r0, [r1, #-0]
 140:	08000140 	stmdaeq	r0, {r6, r8}
 144:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
 148:	00000090 	muleq	r0, r0, r0
 14c:	0000016a 	andeq	r0, r0, sl, ror #2
 150:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
 154:	6a260100 	bvs	98055c <vector_table-0x767faa4>
 158:	02000001 	andeq	r0, r0, #1
 15c:	610b7491 			; <UNDEFINED> instruction: 0x610b7491
 160:	6c270100 	stfvss	f0, [r7], #-0
 164:	01000000 	mrseq	r0, (UNDEF: 0)
 168:	040c0001 	streq	r0, [ip], #-1
 16c:	00000170 	andeq	r0, r0, r0, ror r1
 170:	00004c0d 	andeq	r4, r0, sp, lsl #24
 174:	00c40700 	sbceq	r0, r4, r0, lsl #14
 178:	0d010000 	stceq	0, cr0, [r1, #-0]
 17c:	00000073 	andeq	r0, r0, r3, ror r0
 180:	a7070101 	strge	r0, [r7, -r1, lsl #2]
 184:	01000000 	mrseq	r0, (UNDEF: 0)
 188:	0000730d 	andeq	r7, r0, sp, lsl #6
 18c:	0b010100 	bleq	40594 <vector_table-0x7fbfa6c>
 190:	27010061 	strcs	r0, [r1, -r1, rrx]
 194:	0000006c 	andeq	r0, r0, ip, rrx
 198:	0b000101 	bleq	5a4 <vector_table-0x7fffa5c>
 19c:	02000002 	andeq	r0, r0, #2
 1a0:	0000e200 	andeq	lr, r0, r0, lsl #4
 1a4:	4d010400 	cfstrsmi	mvf0, [r1, #-0]
 1a8:	01000000 	mrseq	r0, (UNDEF: 0)
 1ac:	0000013d 	andeq	r0, r0, sp, lsr r1
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
 1b8:	08000256 	stmdaeq	r0, {r1, r2, r4, r6, r9}
 1bc:	00000105 	andeq	r0, r0, r5, lsl #2
 1c0:	2e060102 	adfcss	f0, f6, f2
 1c4:	02000000 	andeq	r0, r0, #0
 1c8:	002c0801 	eoreq	r0, ip, r1, lsl #16
 1cc:	02020000 	andeq	r0, r2, #0
 1d0:	0000b105 	andeq	fp, r0, r5, lsl #2
 1d4:	07020200 	streq	r0, [r2, -r0, lsl #4]
 1d8:	0000003a 	andeq	r0, r0, sl, lsr r0
 1dc:	97050402 	strls	r0, [r5, -r2, lsl #8]
 1e0:	03000000 	movweq	r0, #0
 1e4:	000000bb 	strheq	r0, [r0], -fp
 1e8:	00535002 	subseq	r5, r3, r2
 1ec:	04020000 	streq	r0, [r2], #-0
 1f0:	00007707 	andeq	r7, r0, r7, lsl #14
 1f4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
 1f8:	00000092 	muleq	r0, r2, r0
 1fc:	72070802 	andvc	r0, r7, #131072	; 0x20000
 200:	04000000 	streq	r0, [r0], #-0
 204:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
 208:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
 20c:	00007c07 	andeq	r7, r0, r7, lsl #24
 210:	1c010500 	cfstr32ne	mvfx0, [r1], {-0}
 214:	01000001 	tsteq	r0, r1
 218:	0170019f 			; <UNDEFINED> instruction: 0x0170019f
 21c:	022c0800 	eoreq	r0, ip, #0, 16
 220:	00c80800 	sbceq	r0, r8, r0, lsl #16
 224:	00c80000 	sbceq	r0, r8, r0
 228:	73060000 	movwvc	r0, #24576	; 0x6000
 22c:	01006372 	tsteq	r0, r2, ror r3
 230:	0000c8a1 	andeq	ip, r0, r1, lsr #17
 234:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 238:	00002707 	andeq	r2, r0, r7, lsl #14
 23c:	c8a10100 	stmiagt	r1!, {r8}
 240:	02000000 	andeq	r0, r0, #0
 244:	43067091 	movwmi	r7, #24721	; 0x6091
 248:	01005243 	tsteq	r0, r3, asr #4
 24c:	0000d3a2 	andeq	sp, r0, r2, lsr #7
 250:	6c910200 	lfmvs	f0, 4, [r1], {0}
 254:	0000d607 	andeq	sp, r0, r7, lsl #12
 258:	d3a20100 			; <UNDEFINED> instruction: 0xd3a20100
 25c:	02000000 	andeq	r0, r0, #0
 260:	08006891 	stmdaeq	r0, {r0, r4, r7, fp, sp, lr}
 264:	0000ce04 	andeq	ip, r0, r4, lsl #28
 268:	006f0900 	rsbeq	r0, pc, r0, lsl #18
 26c:	04080000 	streq	r0, [r8], #-0
 270:	000000d9 	ldrdeq	r0, [r0], -r9
 274:	00004809 	andeq	r4, r0, r9, lsl #16
 278:	fd010a00 	stc2	10, cr0, [r1, #-0]
 27c:	01000000 	mrseq	r0, (UNDEF: 0)
 280:	022c01b6 	eoreq	r0, ip, #-2147483603	; 0x8000002d
 284:	02320800 	eorseq	r0, r2, #0, 16
 288:	01000800 	tsteq	r0, r0, lsl #16
 28c:	010a0000 	mrseq	r0, (UNDEF: 10)
 290:	000000e9 	andeq	r0, r0, r9, ror #1
 294:	3401ba01 	strcc	fp, [r1], #-2561	; 0xfffff5ff
 298:	3e080002 	cdpcc	0, 0, cr0, cr8, cr2, {0}
 29c:	2c080002 	stccs	0, cr0, [r8], {2}
 2a0:	0a000001 	beq	2ac <vector_table-0x7fffd54>
 2a4:	00012a01 	andeq	r2, r1, r1, lsl #20
 2a8:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
 2ac:	08000240 	stmdaeq	r0, {r6, r9}
 2b0:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
 2b4:	00000158 	andeq	r0, r0, r8, asr r1
 2b8:	014c010a 	cmpeq	ip, sl, lsl #2
 2bc:	c6010000 	strgt	r0, [r1], -r0
 2c0:	00024c01 	andeq	r4, r2, r1, lsl #24
 2c4:	00025608 	andeq	r5, r2, r8, lsl #12
 2c8:	00018408 	andeq	r8, r1, r8, lsl #8
 2cc:	01150b00 	tsteq	r5, r0, lsl #22
 2d0:	04010000 	streq	r0, [r1], #-0
 2d4:	0000006f 	andeq	r0, r0, pc, rrx
 2d8:	460b0101 	strmi	r0, [fp], -r1, lsl #2
 2dc:	01000001 	tsteq	r0, r1
 2e0:	00006f04 	andeq	r6, r0, r4, lsl #30
 2e4:	0b010100 	bleq	406ec <vector_table-0x7fbf914>
 2e8:	000000f6 	strdeq	r0, [r0], -r6
 2ec:	006f0401 	rsbeq	r0, pc, r1, lsl #8
 2f0:	01010000 	mrseq	r0, (UNDEF: 1)
 2f4:	0000d00b 	andeq	sp, r0, fp
 2f8:	6f040100 	svcvs	0x00040100
 2fc:	01000000 	mrseq	r0, (UNDEF: 0)
 300:	010e0b01 	tsteq	lr, r1, lsl #22
 304:	04010000 	streq	r0, [r1], #-0
 308:	0000006f 	andeq	r0, r0, pc, rrx
 30c:	690c0101 	stmdbvs	ip, {r0, r8}
 310:	689e0100 	ldmvs	lr, {r8}
 314:	01000000 	mrseq	r0, (UNDEF: 0)
 318:	01150b01 	tsteq	r5, r1, lsl #22
 31c:	04010000 	streq	r0, [r1], #-0
 320:	0000006f 	andeq	r0, r0, pc, rrx
 324:	460b0101 	strmi	r0, [fp], -r1, lsl #2
 328:	01000001 	tsteq	r0, r1
 32c:	00006f04 	andeq	r6, r0, r4, lsl #30
 330:	0b010100 	bleq	40738 <vector_table-0x7fbf8c8>
 334:	000000f6 	strdeq	r0, [r0], -r6
 338:	006f0401 	rsbeq	r0, pc, r1, lsl #8
 33c:	01010000 	mrseq	r0, (UNDEF: 1)
 340:	0000d00b 	andeq	sp, r0, fp
 344:	6f040100 	svcvs	0x00040100
 348:	01000000 	mrseq	r0, (UNDEF: 0)
 34c:	010e0b01 	tsteq	lr, r1, lsl #22
 350:	04010000 	streq	r0, [r1], #-0
 354:	0000006f 	andeq	r0, r0, pc, rrx
 358:	d10d0101 	tstle	sp, r1, lsl #2
 35c:	cf000001 	svcgt	0x00000001
 360:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
 364:	0000006f 	andeq	r0, r0, pc, rrx
 368:	010f004b 	tsteq	pc, fp, asr #32
 36c:	01cf0408 	biceq	r0, pc, r8, lsl #8
 370:	dc100000 	ldcle	0, cr0, [r0], {-0}
 374:	01000000 	mrseq	r0, (UNDEF: 0)
 378:	0001e953 	andeq	lr, r1, r3, asr r9
 37c:	03050100 	movweq	r0, #20736	; 0x5100
 380:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 384:	0001bf11 	andeq	fp, r1, r1, lsl pc
 388:	00691200 	rsbeq	r1, r9, r0, lsl #4
 38c:	00689e01 	rsbeq	r9, r8, r1, lsl #28
 390:	05010000 	streq	r0, [r1, #-0]
 394:	00000003 	andeq	r0, r0, r3
 398:	00611220 	rsbeq	r1, r1, r0, lsr #4
 39c:	00689e01 	rsbeq	r9, r8, r1, lsl #28
 3a0:	05010000 	streq	r0, [r1, #-0]
 3a4:	00000403 	andeq	r0, r0, r3, lsl #8
 3a8:	Address 0x000003a8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	55015201 	strpl	r5, [r1, #-513]	; 0xfffffdff
  10:	00061006 	andeq	r1, r6, r6
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <vector_table-0x707d3b4>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <vector_table-0x7d3179c>
  28:	0013490b 	andseq	r4, r3, fp, lsl #18
  2c:	00240400 	eoreq	r0, r4, r0, lsl #8
  30:	0b3e0b0b 	bleq	f82c64 <vector_table-0x707d39c>
  34:	00000803 	andeq	r0, r0, r3, lsl #16
  38:	3f002e05 	svccc	0x00002e05
  3c:	3a08030c 	bcc	200c74 <vector_table-0x7dff38c>
  40:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  44:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  48:	00064001 	andeq	r4, r6, r1
  4c:	012e0600 	teqeq	lr, r0, lsl #12
  50:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  54:	0b3b0b3a 	bleq	ec2d44 <vector_table-0x713d2bc>
  58:	13490c27 	movtne	r0, #39975	; 0x9c27
  5c:	01120111 	tsteq	r2, r1, lsl r1
  60:	13010640 	movwne	r0, #5696	; 0x1640
  64:	34070000 	strcc	r0, [r7], #-0
  68:	3a0e0300 	bcc	380c70 <vector_table-0x7c7f390>
  6c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  70:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  74:	0800000c 	stmdaeq	r0, {r2, r3}
  78:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  7c:	0b3b0b3a 	bleq	ec2d6c <vector_table-0x713d294>
  80:	0a021349 	beq	84dac <vector_table-0x7f7b254>
  84:	34090000 	strcc	r0, [r9], #-0
  88:	3a080300 	bcc	200c90 <vector_table-0x7dff370>
  8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  90:	000a0213 	andeq	r0, sl, r3, lsl r2
  94:	00340a00 	eorseq	r0, r4, r0, lsl #20
  98:	0b3a0803 	bleq	e820ac <vector_table-0x717df54>
  9c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  a0:	340b0000 	strcc	r0, [fp], #-0
  a4:	3a080300 	bcc	200cac <vector_table-0x7dff354>
  a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ac:	3c0c3f13 	stccc	15, cr3, [ip], {19}
  b0:	0c00000c 	stceq	0, cr0, [r0], {12}
  b4:	0b0b000f 	bleq	2c00f8 <vector_table-0x7d3ff08>
  b8:	00001349 	andeq	r1, r0, r9, asr #6
  bc:	4900350d 	stmdbmi	r0, {r0, r2, r3, r8, sl, ip, sp}
  c0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  c4:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
  c8:	00001349 	andeq	r1, r0, r9, asr #6
  cc:	3f012e0f 	svccc	0x00012e0f
  d0:	3a0e030c 	bcc	380d08 <vector_table-0x7c7f2f8>
  d4:	110b3b0b 	tstne	fp, fp, lsl #22
  d8:	40011201 	andmi	r1, r1, r1, lsl #4
  dc:	00130106 	andseq	r0, r3, r6, lsl #2
  e0:	11010000 	mrsne	r0, (UNDEF: 1)
  e4:	130e2501 	movwne	r2, #58625	; 0xe501
  e8:	1b0e030b 	blne	380d1c <vector_table-0x7c7f2e4>
  ec:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
  f0:	00061001 	andeq	r1, r6, r1
  f4:	00240200 	eoreq	r0, r4, r0, lsl #4
  f8:	0b3e0b0b 	bleq	f82d2c <vector_table-0x707d2d4>
  fc:	00000e03 	andeq	r0, r0, r3, lsl #28
 100:	03001603 	movweq	r1, #1539	; 0x603
 104:	3b0b3a0e 	blcc	2ce944 <vector_table-0x7d316bc>
 108:	0013490b 	andseq	r4, r3, fp, lsl #18
 10c:	00240400 	eoreq	r0, r4, r0, lsl #8
 110:	0b3e0b0b 	bleq	f82d44 <vector_table-0x707d2bc>
 114:	00000803 	andeq	r0, r0, r3, lsl #16
 118:	3f012e05 	svccc	0x00012e05
 11c:	3a0e030c 	bcc	380d54 <vector_table-0x7c7f2ac>
 120:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 124:	1201110c 	andne	r1, r1, #12, 2
 128:	01064001 	tsteq	r6, r1
 12c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 130:	08030034 	stmdaeq	r3, {r2, r4, r5}
 134:	0b3b0b3a 	bleq	ec2e24 <vector_table-0x713d1dc>
 138:	0a021349 	beq	84e64 <vector_table-0x7f7b19c>
 13c:	34070000 	strcc	r0, [r7], #-0
 140:	3a0e0300 	bcc	380d48 <vector_table-0x7c7f2b8>
 144:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 148:	000a0213 	andeq	r0, sl, r3, lsl r2
 14c:	000f0800 	andeq	r0, pc, r0, lsl #16
 150:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 154:	35090000 	strcc	r0, [r9, #-0]
 158:	00134900 	andseq	r4, r3, r0, lsl #18
 15c:	002e0a00 	eoreq	r0, lr, r0, lsl #20
 160:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 164:	0b3b0b3a 	bleq	ec2e54 <vector_table-0x713d1ac>
 168:	01110c27 	tsteq	r1, r7, lsr #24
 16c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 170:	340b0000 	strcc	r0, [fp], #-0
 174:	3a0e0300 	bcc	380d7c <vector_table-0x7c7f284>
 178:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 17c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 180:	0c00000c 	stceq	0, cr0, [r0], {12}
 184:	08030034 	stmdaeq	r3, {r2, r4, r5}
 188:	0b3b0b3a 	bleq	ec2e78 <vector_table-0x713d188>
 18c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 70 <vector_table-0x7ffff90>
 190:	00000c3c 	andeq	r0, r0, ip, lsr ip
 194:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
 198:	00130113 	andseq	r0, r3, r3, lsl r1
 19c:	00210e00 	eoreq	r0, r1, r0, lsl #28
 1a0:	0b2f1349 	bleq	bc4ecc <vector_table-0x743b134>
 1a4:	150f0000 	strne	r0, [pc, #-0]	; 1ac <vector_table-0x7fffe54>
 1a8:	000c2700 	andeq	r2, ip, r0, lsl #14
 1ac:	00341000 	eorseq	r1, r4, r0
 1b0:	0b3a0e03 	bleq	e839c4 <vector_table-0x717c63c>
 1b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1b8:	0a020c3f 	beq	832bc <vector_table-0x7f7cd44>
 1bc:	26110000 	ldrcs	r0, [r1], -r0
 1c0:	00134900 	andseq	r4, r3, r0, lsl #18
 1c4:	00341200 	eorseq	r1, r4, r0, lsl #4
 1c8:	0b3a0803 	bleq	e821dc <vector_table-0x717de24>
 1cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1d0:	0a020c3f 	beq	832d4 <vector_table-0x7f7cd2c>
 1d4:	Address 0x000001d4 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
   4:	0800025a 	stmdaeq	r0, {r1, r3, r4, r6, r9}
   8:	007d0002 	rsbseq	r0, sp, r2
   c:	0800025a 	stmdaeq	r0, {r1, r3, r4, r6, r9}
  10:	0800025c 	stmdaeq	r0, {r2, r3, r4, r6, r9}
  14:	047d0002 	ldrbteq	r0, [sp], #-2
  18:	0800025c 	stmdaeq	r0, {r2, r3, r4, r6, r9}
  1c:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  20:	04770002 	ldrbteq	r0, [r7], #-2
	...
  2c:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  30:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
  34:	007d0002 	rsbseq	r0, sp, r2
  38:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
  3c:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
  40:	087d0002 	ldmdaeq	sp!, {r1}^
  44:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
  48:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
  4c:	187d0002 	ldmdane	sp!, {r1}^
  50:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
  54:	080002e8 	stmdaeq	r0, {r3, r5, r6, r7, r9}
  58:	18770002 	ldmdane	r7!, {r1}^
	...
  64:	08000130 	stmdaeq	r0, {r4, r5, r8}
  68:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
  6c:	007d0002 	rsbseq	r0, sp, r2
  70:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
  74:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
  78:	047d0002 	ldrbteq	r0, [sp], #-2
  7c:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
  80:	08000140 	stmdaeq	r0, {r6, r8}
  84:	04770002 	ldrbteq	r0, [r7], #-2
	...
  90:	08000140 	stmdaeq	r0, {r6, r8}
  94:	08000142 	stmdaeq	r0, {r1, r6, r8}
  98:	007d0002 	rsbseq	r0, sp, r2
  9c:	08000142 	stmdaeq	r0, {r1, r6, r8}
  a0:	08000144 	stmdaeq	r0, {r2, r6, r8}
  a4:	047d0002 	ldrbteq	r0, [sp], #-2
  a8:	08000144 	stmdaeq	r0, {r2, r6, r8}
  ac:	08000146 	stmdaeq	r0, {r1, r2, r6, r8}
  b0:	107d0002 	rsbsne	r0, sp, r2
  b4:	08000146 	stmdaeq	r0, {r1, r2, r6, r8}
  b8:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
  bc:	10770002 	rsbsne	r0, r7, r2
	...
  cc:	00000002 	andeq	r0, r0, r2
  d0:	007d0002 	rsbseq	r0, sp, r2
  d4:	00000002 	andeq	r0, r0, r2
  d8:	00000004 	andeq	r0, r0, r4
  dc:	087d0002 	ldmdaeq	sp!, {r1}^
  e0:	00000004 	andeq	r0, r0, r4
  e4:	00000006 	andeq	r0, r0, r6
  e8:	187d0002 	ldmdane	sp!, {r1}^
  ec:	00000006 	andeq	r0, r0, r6
  f0:	000000bc 	strheq	r0, [r0], -ip
  f4:	18770002 	ldmdane	r7!, {r1}^
	...
 100:	000000bc 	strheq	r0, [r0], -ip
 104:	000000be 	strheq	r0, [r0], -lr
 108:	007d0002 	rsbseq	r0, sp, r2
 10c:	000000be 	strheq	r0, [r0], -lr
 110:	000000c0 	andeq	r0, r0, r0, asr #1
 114:	047d0002 	ldrbteq	r0, [sp], #-2
 118:	000000c0 	andeq	r0, r0, r0, asr #1
 11c:	000000c2 	andeq	r0, r0, r2, asr #1
 120:	04770002 	ldrbteq	r0, [r7], #-2
	...
 12c:	000000c4 	andeq	r0, r0, r4, asr #1
 130:	000000c6 	andeq	r0, r0, r6, asr #1
 134:	007d0002 	rsbseq	r0, sp, r2
 138:	000000c6 	andeq	r0, r0, r6, asr #1
 13c:	000000c8 	andeq	r0, r0, r8, asr #1
 140:	047d0002 	ldrbteq	r0, [sp], #-2
 144:	000000c8 	andeq	r0, r0, r8, asr #1
 148:	000000ce 	andeq	r0, r0, lr, asr #1
 14c:	04770002 	ldrbteq	r0, [r7], #-2
	...
 158:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 15c:	000000d2 	ldrdeq	r0, [r0], -r2
 160:	007d0002 	rsbseq	r0, sp, r2
 164:	000000d2 	ldrdeq	r0, [r0], -r2
 168:	000000d4 	ldrdeq	r0, [r0], -r4
 16c:	047d0002 	ldrbteq	r0, [sp], #-2
 170:	000000d4 	ldrdeq	r0, [r0], -r4
 174:	000000da 	ldrdeq	r0, [r0], -sl
 178:	04770002 	ldrbteq	r0, [r7], #-2
	...
 184:	000000dc 	ldrdeq	r0, [r0], -ip
 188:	000000de 	ldrdeq	r0, [r0], -lr
 18c:	007d0002 	rsbseq	r0, sp, r2
 190:	000000de 	ldrdeq	r0, [r0], -lr
 194:	000000e0 	andeq	r0, r0, r0, ror #1
 198:	047d0002 	ldrbteq	r0, [sp], #-2
 19c:	000000e0 	andeq	r0, r0, r0, ror #1
 1a0:	000000e6 	andeq	r0, r0, r6, ror #1
 1a4:	04770002 	ldrbteq	r0, [r7], #-2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000002c 	andeq	r0, r0, ip, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000130 	stmdaeq	r0, {r4, r5, r8}
  14:	00000040 	andeq	r0, r0, r0, asr #32
  18:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  24:	00000080 	andeq	r0, r0, r0, lsl #1
	...
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	019b0002 	orrseq	r0, fp, r2
  38:	00040000 	andeq	r0, r4, r0
  3c:	00000000 	andeq	r0, r0, r0
  40:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
  44:	000000e6 	andeq	r0, r0, r6, ror #1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000130 	stmdaeq	r0, {r4, r5, r8}
   4:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
   8:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
   c:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  10:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  14:	080002e8 	stmdaeq	r0, {r3, r5, r6, r7, r9}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000101 	andeq	r0, r0, r1, lsl #2
   4:	00ab0002 	adceq	r0, fp, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	616d612f 	cmnvs	sp, pc, lsr #2
  24:	6f432f6e 	svcvs	0x00432f6e
  28:	6f536564 	svcvs	0x00536564
  2c:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
  30:	532f7972 	teqpl	pc, #1867776	; 0x1c8000
  34:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  38:	5f797265 	svcpl	0x00797265
  3c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
  40:	636e6542 	cmnvs	lr, #276824064	; 0x10800000
  44:	694c5f68 	stmdbvs	ip, {r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  48:	665f6574 			; <UNDEFINED> instruction: 0x665f6574
  4c:	415f726f 	cmpmi	pc, pc, ror #4
  50:	455f4d52 	ldrbmi	r4, [pc, #-3410]	; fffff306 <_stack+0xdfffeb06>
  54:	2f494241 	svccs	0x00494241
  58:	2f6e6962 	svccs	0x006e6962
  5c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; ffffffac <_stack+0xdffff7ac>
  60:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
  64:	612f6363 	teqvs	pc, r3, ror #6
  68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  74:	362e342f 	strtcc	r3, [lr], -pc, lsr #8
  78:	2e2f312e 	sufcsep	f3, f7, #0.5
  7c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
  80:	2f2e2e2f 	svccs	0x002e2e2f
  84:	612f2e2e 	teqvs	pc, lr, lsr #28
  88:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  8c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  90:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  94:	636e692f 	cmnvs	lr, #770048	; 0xbc000
  98:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
  9c:	616d0000 	cmnvs	sp, r0
  a0:	632e6e69 	teqvs	lr, #1680	; 0x690
  a4:	00000000 	andeq	r0, r0, r0
  a8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  ac:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  b0:	00000100 	andeq	r0, r0, r0, lsl #2
  b4:	02050000 	andeq	r0, r5, #0
  b8:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  bc:	022f2f16 	eoreq	r2, pc, #22, 30	; 0x58
  c0:	01010004 	tsteq	r1, r4
  c4:	68020500 	stmdavs	r2, {r8, sl}
  c8:	03080002 	movweq	r0, #32770	; 0x8002
  cc:	5944010b 	stmdbpl	r4, {r0, r1, r3, r8}^
  d0:	02040200 	andeq	r0, r4, #0, 4
  d4:	04020083 	streq	r0, [r2], #-131	; 0xffffff7d
  d8:	02004902 	andeq	r4, r0, #32768	; 0x8000
  dc:	82060104 	andhi	r0, r6, #4, 2
  e0:	08757706 	ldmdaeq	r5!, {r1, r2, r8, r9, sl, ip, sp, lr}^
  e4:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
  e8:	01022f01 	tsteq	r2, r1, lsl #30
  ec:	00010100 	andeq	r0, r1, r0, lsl #2
  f0:	01300205 	teqeq	r0, r5, lsl #4
  f4:	21030800 	tstcs	r3, r0, lsl #16
  f8:	4b2f2f01 	blmi	bcbd04 <vector_table-0x74342fc>
  fc:	5059773f 	subspl	r7, r9, pc, lsr r7
 100:	01000502 	tsteq	r0, r2, lsl #10
 104:	0000f801 	andeq	pc, r0, r1, lsl #16
 108:	ad000200 	sfmge	f0, 4, [r0, #-0]
 10c:	02000000 	andeq	r0, r0, #0
 110:	0d0efb01 	vstreq	d15, [lr, #-4]
 114:	01010100 	mrseq	r0, (UNDEF: 17)
 118:	00000001 	andeq	r0, r0, r1
 11c:	01000001 	tsteq	r0, r1
 120:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6c <vector_table-0x7ffff94>
 124:	6d612f65 	stclvs	15, cr2, [r1, #-404]!	; 0xfffffe6c
 128:	432f6e61 	teqmi	pc, #1552	; 0x610
 12c:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 130:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 134:	2f797265 	svccs	0x00797265
 138:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 13c:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 140:	646f435f 	strbtvs	r4, [pc], #-863	; 148 <vector_table-0x7fffeb8>
 144:	6e654265 	cdpvs	2, 6, cr4, cr5, cr5, {3}
 148:	4c5f6863 	mrrcmi	8, 6, r6, pc, cr3	; <UNPREDICTABLE>
 14c:	5f657469 	svcpl	0x00657469
 150:	5f726f66 	svcpl	0x00726f66
 154:	5f4d5241 	svcpl	0x004d5241
 158:	49424145 	stmdbmi	r2, {r0, r2, r6, r8, lr}^
 15c:	6e69622f 	cdpvs	2, 6, cr6, cr9, cr15, {1}
 160:	2f2e2e2f 	svccs	0x002e2e2f
 164:	2f62696c 	svccs	0x0062696c
 168:	2f636367 	svccs	0x00636367
 16c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 170:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 174:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 178:	2e342f69 	cdpcs	15, 3, cr2, cr4, cr9, {3}
 17c:	2f312e36 	svccs	0x00312e36
 180:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 184:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 188:	2f2e2e2f 	svccs	0x002e2e2f
 18c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 190:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 194:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 198:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 19c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 1a0:	76000065 	strvc	r0, [r0], -r5, rrx
 1a4:	6f746365 	svcvs	0x00746365
 1a8:	00632e72 	rsbeq	r2, r3, r2, ror lr
 1ac:	73000000 	movwvc	r0, #0
 1b0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 1b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	70020500 	andvc	r0, r2, r0, lsl #10
 1c0:	03080001 	movweq	r0, #32769	; 0x8001
 1c4:	3f01019f 	svccc	0x0001019f
 1c8:	04020075 	streq	r0, [r2], #-117	; 0xffffff8b
 1cc:	06200601 	strteq	r0, [r0], -r1, lsl #12
 1d0:	594b5975 	stmdbpl	fp, {r0, r2, r4, r5, r6, r8, fp, ip, lr}^
 1d4:	0200684c 	andeq	r6, r0, #76, 16	; 0x4c0000
 1d8:	00ad0204 	adceq	r0, sp, r4, lsl #4
 1dc:	49020402 	stmdbmi	r2, {r1, sl}
 1e0:	01040200 	mrseq	r0, R12_usr
 1e4:	77068206 	strvc	r8, [r6, -r6, lsl #4]
 1e8:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
 1ec:	2f788101 	svccs	0x00788101
 1f0:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
 1f4:	30312f01 	eorscc	r2, r1, r1, lsl #30
 1f8:	304d324d 	subcc	r3, sp, sp, asr #4
 1fc:	01000302 	tsteq	r0, r2, lsl #6
 200:	Address 0x00000200 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff4c <_stack+0xdffff74c>
   4:	6d612f65 	stclvs	15, cr2, [r1, #-404]!	; 0xfffffe6c
   8:	432f6e61 	teqmi	pc, #1552	; 0x610
   c:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
  10:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  14:	2f797265 	svccs	0x00797265
  18:	74656863 	strbtvc	r6, [r5], #-2147	; 0xfffff79d
  1c:	702f6e61 	eorvc	r6, pc, r1, ror #28
  20:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
  24:	64007463 	strvs	r7, [r0], #-1123	; 0xfffffb9d
  28:	00747365 	rsbseq	r7, r4, r5, ror #6
  2c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  30:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  34:	61686320 	cmnvs	r8, r0, lsr #6
  38:	68730072 	ldmdavs	r3!, {r1, r4, r5, r6}^
  3c:	2074726f 	rsbscs	r7, r4, pc, ror #4
  40:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  44:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  48:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  4c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  50:	34204320 	strtcc	r4, [r0], #-800	; 0xfffffce0
  54:	312e362e 	teqcc	lr, lr, lsr #12
  58:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  5c:	7375006e 	cmnvc	r5, #110	; 0x6e
  60:	5f656761 	svcpl	0x00656761
  64:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
  68:	61685f74 	smcvs	34292	; 0x85f4
  6c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
  70:	6f6c0072 	svcvs	0x006c0072
  74:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
  78:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	646f6300 	strbtvs	r6, [pc], #-768	; 90 <vector_table-0x7ffff70>
  8c:	64646165 	strbtvs	r6, [r4], #-357	; 0xfffffe9b
  90:	6f6c0072 	svcvs	0x006c0072
  94:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
  98:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  9c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  a0:	6e69616d 	powvsez	f6, f1, #5.0
  a4:	7300632e 	movwvc	r6, #814	; 0x32e
  a8:	75666d75 	strbvc	r6, [r6, #-3445]!	; 0xfffff28b
  ac:	646e656e 	strbtvs	r6, [lr], #-1390	; 0xfffffa92
  b0:	6f687300 	svcvs	0x00687300
  b4:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
  b8:	7500746e 	strvc	r7, [r0, #-1134]	; 0xfffffb92
  bc:	33746e69 	cmncc	r4, #1680	; 0x690
  c0:	00745f32 	rsbseq	r5, r4, r2, lsr pc
  c4:	666d7573 			; <UNDEFINED> instruction: 0x666d7573
  c8:	74736e75 	ldrbtvc	r6, [r3], #-3701	; 0xfffff18b
  cc:	00747261 	rsbseq	r7, r4, r1, ror #4
  d0:	7362655f 	cmnvc	r2, #398458880	; 0x17c00000
  d4:	48530073 	ldmdami	r3, {r0, r1, r4, r5, r6}^
  d8:	00525343 	subseq	r5, r2, r3, asr #6
  dc:	74636576 	strbtvc	r6, [r3], #-1398	; 0xfffffa8a
  e0:	745f726f 	ldrbvc	r7, [pc], #-623	; e8 <vector_table-0x7ffff18>
  e4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
  e8:	6c756e00 	ldclvs	14, cr6, [r5], #-0
  ec:	61685f6c 	cmnvs	r8, ip, ror #30
  f0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
  f4:	655f0072 	ldrbvs	r0, [pc, #-114]	; 8a <vector_table-0x7ffff76>
  f8:	61746164 	cmnvs	r4, r4, ror #2
  fc:	6f6c6200 	svcvs	0x006c6200
 100:	6e696b63 	vnmulvs.f64	d22, d9, d19
 104:	61685f67 	cmnvs	r8, r7, ror #30
 108:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 10c:	735f0072 	cmpvc	pc, #114	; 0x72
 110:	6b636174 	blvs	18d86e8 <vector_table-0x6727918>
 114:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
 118:	00747865 	rsbseq	r7, r4, r5, ror #16
 11c:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
 120:	61685f74 	smcvs	34292	; 0x85f4
 124:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 128:	61680072 	smcvs	32770	; 0x8002
 12c:	665f6472 			; <UNDEFINED> instruction: 0x665f6472
 130:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 134:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 138:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 13c:	63657600 	cmnvs	r5, #0, 12
 140:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
 144:	645f0063 	ldrbvs	r0, [pc], #-99	; 14c <vector_table-0x7fffeb4>
 148:	00617461 	rsbeq	r7, r1, r1, ror #8
 14c:	5f6d656d 	svcpl	0x006d656d
 150:	616e616d 	cmnvs	lr, sp, ror #2
 154:	685f6567 	ldmdavs	pc, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
 158:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 15c:	Address 0x0000015c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <vector_table-0x6f2f2dc>
   4:	6f532820 	svcvs	0x00532820
   8:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
   c:	43207972 	teqmi	r0, #1867776	; 0x1c8000
  10:	4265646f 	rsbmi	r6, r5, #1862270976	; 0x6f000000
  14:	68636e65 	stmdavs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
  18:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
  1c:	30322065 	eorscc	r2, r2, r5, rrx
  20:	302e3131 	eorcc	r3, lr, r1, lsr r1
  24:	39362d39 	ldmdbcc	r6!, {r0, r3, r4, r5, r8, sl, fp, sp}
  28:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  2c:	00312e36 	eorseq	r2, r1, r6, lsr lr

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1e011a01 	vmlane.f32	s2, s2, s2
  30:	Address 0x00000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000014 	andeq	r0, r0, r4, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  24:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  34:	00000080 	andeq	r0, r0, r0, lsl #1
  38:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  3c:	41028701 	tstmi	r2, r1, lsl #14
  40:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  44:	00000007 	andeq	r0, r0, r7
  48:	00000014 	andeq	r0, r0, r4, lsl r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	08000130 	stmdaeq	r0, {r4, r5, r8}
  54:	00000010 	andeq	r0, r0, r0, lsl r0
  58:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  5c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	08000140 	stmdaeq	r0, {r6, r8}
  6c:	00000030 	andeq	r0, r0, r0, lsr r0
  70:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	0000000c 	andeq	r0, r0, ip
  80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  84:	7c020001 	stcvc	0, cr0, [r2], {1}
  88:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  8c:	0000001c 	andeq	r0, r0, ip, lsl r0
  90:	0000007c 	andeq	r0, r0, ip, ror r0
  94:	08000170 	stmdaeq	r0, {r4, r5, r6, r8}
  98:	000000bc 	strheq	r0, [r0], -ip
  9c:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  a0:	41028701 	tstmi	r2, r1, lsl #14
  a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  a8:	00000007 	andeq	r0, r0, r7
  ac:	00000014 	andeq	r0, r0, r4, lsl r0
  b0:	0000007c 	andeq	r0, r0, ip, ror r0
  b4:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
  b8:	00000006 	andeq	r0, r0, r6
  bc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  c0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  c4:	00000014 	andeq	r0, r0, r4, lsl r0
  c8:	0000007c 	andeq	r0, r0, ip, ror r0
  cc:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
  d0:	0000000a 	andeq	r0, r0, sl
  d4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  d8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  dc:	00000014 	andeq	r0, r0, r4, lsl r0
  e0:	0000007c 	andeq	r0, r0, ip, ror r0
  e4:	08000240 	stmdaeq	r0, {r6, r9}
  e8:	0000000a 	andeq	r0, r0, sl
  ec:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  f0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  f4:	00000014 	andeq	r0, r0, r4, lsl r0
  f8:	0000007c 	andeq	r0, r0, ip, ror r0
  fc:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
 100:	0000000a 	andeq	r0, r0, sl
 104:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 108:	070d4101 	streq	r4, [sp, -r1, lsl #2]
